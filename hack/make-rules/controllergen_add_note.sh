#!/usr/bin/env bash

# Copyright 2023 The OpenYurt Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# exit immediately when a command fails
#set -e
# only exit with zero if all commands of the pipeline exit successfully
#set -o pipefail
# error on unset variables
#set -u

function usage(){
    echo "$0 [Options]"
    echo -e "Options:"
    echo -e "\t-c, --crd\t crd manifest path,Only relative directories are needed."
    echo -e "\t-w, --webhook\t webhook manifest path, Only relative directories are needed."
    echo -e "\t-r, --rbac\t rbac manifest path, Only relative directories are needed."
    echo -e "\t-h, --help\tHelp information"
    exit 1
}

YURT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd -P)"
SUFFIX="auto_generated"

CRD="charts/openyurt/templates/.crd"
WEBHOOK="charts/openyurt/templates/.webhook"
RBAC="charts/openyurt/templates/.rbac"

while [ $# -gt 0 ];do
    case $1 in
    --crd|-c)
      shift
      CRD=$1
      shift
      ;;
    --webhook|-w)
      shift
      WEBHOOK=$1
      shift
      ;;
    --rbac|-r)
      shift
      RBAC=$1
      shift
      ;;
    --help|-h)
      shift
      usage
      ;;
    *)
      usage
      ;;
    esac
done

NEW_CRD="$(dirname $CRD)"/"crd"
NEW_WEBHOOK="$(dirname $WEBHOOK)"/"webhook"
NEW_RBAC="$(dirname $RBAC)"/"rbac"

rm -rf $NEW_CRD
rm -rf $NEW_WEBHOOK
rm -rf $NEW_RBAC

mkdir -p $NEW_CRD
mkdir -p $NEW_WEBHOOK
mkdir -p $NEW_RBAC

function append_note() {
    local file=$1
    local content=$(cat $file)
    cat > ${file} <<- EOF
# ---------------------------------------------------
#
# Manifest generated by controller-gen. DO NOT EDIT !!!
# You can view the "make manifests" command in Makefile
#
# ---------------------------------------------------

---
${content}
EOF
    
}

function note_crd() {
    local dir="${YURT_ROOT}/${CRD}"
    for file in ${dir}/*
    do
        if [ -f ${file} ] && [ "${file##*.}" = "yaml" ]; then 
            local f=$(basename $file)
            local fname=${f%.*}
            local newfile=${NEW_CRD}/${fname}_${SUFFIX}.yaml
            echo "[crd] ${f} is a yaml file created automatically by controller-gen, add some note"
            append_note ${file}
            mv -f ${file} ${newfile}
        fi
    done
    rm -rf ${dir}
}

function note_webhook() {
	local dir="${YURT_ROOT}/${WEBHOOK}"
    local file="${dir}/manifests.yaml"
    if [ -f ${file} ] ; then 
        local f=$(basename $file)
        local fname=${f%.*}
        local newfile=${NEW_WEBHOOK}/${fname}_${SUFFIX}.yaml
        echo "[webhook] ${f} is a yaml file created automatically by controller-gen, add some note"
        append_note ${file}
        mv -f ${file} ${newfile}
    else
        echo "webhook manifest file $file not exist ..."
        exit 1
    fi
    rm -rf ${dir}
}

function note_rbac() {
	local dir="${YURT_ROOT}/${RBAC}"
    local file="${dir}/role.yaml"
    if [ -f ${file} ] ; then 
        local f=$(basename $file)
        local fname=${f%.*}
        local newfile=${NEW_RBAC}/${fname}_${SUFFIX}.yaml
        echo "[rbac] ${f} is a yaml file created automatically by controller-gen, add some note"
        append_note ${file}
        mv -f ${file} ${newfile}
    else
        echo "rbac manifest file $file not exist ..."
        exit 1
    fi
    rm -rf ${dir}
}

note_crd
note_webhook
note_rbac
