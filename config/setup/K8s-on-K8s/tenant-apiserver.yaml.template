apiVersion: v1
kind: Service
metadata:
  name: tenant-apiserver
  namespace: tenant-control-plane
spec:
  # service ip for loadbalancing in tenant-k8s, which is customer configuration
  clusterIP: "${TENANT_APISERVER_SERVICE}"
  type: NodePort
  ports:
  - name: https
    port: 6443
    protocol: TCP
    targetPort: 6443
    # nodePort is for generating admin.conf, this kubeconfig's server ip is "https://127.0.0.1:${TENANT_APISERVER_SERVICE_PORT}", used for kubectl to access and manage tenant-K8s
    nodePort: ${TENANT_APISERVER_SERVICE_PORT}
  selector:
    component: tenant-apiserver
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tenant-apiserver
  namespace: tenant-control-plane
  labels:
    tier: control-plane
    component: tenant-apiserver
spec:
  selector:
    matchLabels:
      tier: control-plane
      component: tenant-apiserver
  template:
    metadata:
      labels:
        tier: control-plane
        component: tenant-apiserver
    spec:
      containers:
      - command:
        - kube-apiserver
        - --advertise-address=$(NODE_IP)
        - --allow-privileged=true
        - --authorization-mode=Node,RBAC
        - --client-ca-file=/etc/kubernetes/pki/ca.crt
        - --enable-admission-plugins=NodeRestriction
        - --enable-bootstrap-token-auth=true
        - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
        - --etcd-certfile=/etc/kubernetes/pki/etcd/apiserver-etcd-client.crt
        - --etcd-keyfile=/etc/kubernetes/pki/etcd/apiserver-etcd-client.key
        - --etcd-servers=https://etcd-0.etcd:2379,https://etcd-1.etcd:2379,https://etcd-2.etcd:2379
        - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
        - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
        - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
        - --requestheader-allowed-names=front-proxy-client
        - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        - --secure-port=6443
        - --service-account-issuer=https://kubernetes.default.svc.cluster.local
        - --service-account-key-file=/etc/kubernetes/pki/sa.pub
        - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
        - --service-cluster-ip-range=10.96.0.0/12
        - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
        - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: registry.aliyuncs.com/google_containers/kube-apiserver:${TENANT_K8S_VERSION}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 8
          httpGet:
            host: 127.0.0.1
            path: /livez
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /readyz
            port: 6443
            scheme: HTTPS
          periodSeconds: 1
          timeoutSeconds: 15
        startupProbe:
          failureThreshold: 24
          httpGet:
            host: 127.0.0.1
            path: /livez
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
        name: tenant-apiserver
        resources:
          requests:
            cpu: 250m
        volumeMounts:
        - name: ca-vol
          mountPath: /etc/kubernetes/pki/ca.crt
          subPath: ca.crt
        - name: apiserver-certs-vol
          mountPath: /etc/kubernetes/pki/apiserver.crt
          subPath: tls.crt
        - name: apiserver-certs-vol
          mountPath: /etc/kubernetes/pki/apiserver.key
          subPath: tls.key
        - name: apiserver-kubelet-client-certs-vol
          mountPath: /etc/kubernetes/pki/apiserver-kubelet-client.crt
          subPath: tls.crt
        - name: apiserver-kubelet-client-certs-vol
          mountPath: /etc/kubernetes/pki/apiserver-kubelet-client.key
          subPath: tls.key
        - name: sa-keys-vol
          mountPath: /etc/kubernetes/pki/sa.pub
          subPath: sa.pub
        - name: sa-keys-vol
          mountPath: /etc/kubernetes/pki/sa.key
          subPath: sa.key
        - name: front-proxy-ca-vol
          mountPath: /etc/kubernetes/pki/front-proxy-ca.crt
          subPath: front-proxy-ca.crt
        - name: front-proxy-client-certs-vol
          mountPath: /etc/kubernetes/pki/front-proxy-client.crt
          subPath: tls.crt
        - name: front-proxy-client-certs-vol
          mountPath: /etc/kubernetes/pki/front-proxy-client.key
          subPath: tls.key
        - name: apiserver-etcd-client-certs-vol
          mountPath: /etc/kubernetes/pki/etcd/ca.crt
          subPath: ca.crt
        - name: apiserver-etcd-client-certs-vol
          mountPath: /etc/kubernetes/pki/etcd/apiserver-etcd-client.crt
          subPath: tls.crt
        - name: apiserver-etcd-client-certs-vol
          mountPath: /etc/kubernetes/pki/etcd/apiserver-etcd-client.key
          subPath: tls.key
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-cluster-critical
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: ca-vol
        secret: { secretName: host-k8s-ca-key-pair }
      - name: apiserver-certs-vol
        secret: { secretName: tenant-apiserver-certs }
      - name: apiserver-kubelet-client-certs-vol
        secret: { secretName: tenant-apiserver-kubelet-client-certs }
      - name: sa-keys-vol
        secret: { secretName: tenant-sa-keys }
      - name: front-proxy-ca-vol
        secret: { secretName: tenant-front-proxy-ca }
      - name: front-proxy-client-certs-vol
        secret: { secretName: tenant-front-proxy-client-certs }
      - name: apiserver-etcd-client-certs-vol
        secret: { secretName: tenant-apiserver-etcd-client-certs }
