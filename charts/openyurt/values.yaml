
imagePullSecrets: []

yurtControllerManager:
  replicaCount: 1
  tolerations: []
  image:
    registry: docker.io
    repository: openyurt/yurt-controller-manager
    pullPolicy: IfNotPresent
    tag: v1.2.0

poolCoordinator:
  apiserverSecurePort: 10270
  apiserverImage:
    registry: k8s.gcr.io
    repository: kube-apiserver
    pullPolicy: IfNotPresent
    tag: v1.22.0
  apiserverResources:
    requests:
      cpu: 250m
  serviceClusterIPRange: 10.96.0.0/12
  etcdPort: 12379
  etcdMetricPort: 12381
  etcdImage:
    registry: k8s.gcr.io
    repository: etcd
    pullPolicy: IfNotPresent
    tag: 3.5.0-0
  etcdResources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

yurtHub:
  cacheAgents: ""

yurtManager:
  # settings for log print
  log:
    # log level for yurt-manager
    level: "4"
  replicas: 2
  image:
    registry: docker.io
    repository: openyurt/yurt-manager
    tag: v1.2.0
  webhook:
    port: 9876
  metrics:
    port: 8080
  healthProbe:
    port: 8000
  # resources of yurt-manager container
  resources:
    limits:
      cpu: 2000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi
  affinity: 
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: openyurt.io/is-edge-worker
            operator: In
            values:
            - "false"
